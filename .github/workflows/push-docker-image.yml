# CAUTION: Workflows that are dependent on other workflows, work only properly on the default-branch (`master`)

name: Push docker image

on:
  workflow_run:
    workflows: ["Run tests"]
    branches:
      - master
    tags:
      - '**'

env:
  DOCKER_IMAGE: codekie/openapi-examples-validator
  DOCKER_IMAGE_TEST: codekie/openapi-examples-validator:test
  PATH_DOCKERFILE: dist/Dockerfile
  PATH_IMAGE_ARTIFACT: /tmp/myimage.tar

jobs:
  # Build image and create artifact
  build:
    # Only run this job, if the workflows that it's depending on, has been successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # An explicit checkout is required, due to the `file`- and `context`-option, in the "Build and export to Docker"
      # See: https://github.com/docker/build-push-action/issues/51#issuecomment-724662235
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          file: ${{ env.PATH_DOCKERFILE }}
          tags: ${{ env.DOCKER_IMAGE_TEST }}
          outputs: type=docker,dest=${{ env.PATH_IMAGE_ARTIFACT }}
      # Upload docker-image as artifact, so it can be used in succeeding jobs
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: myimage
          path: ${{ env.PATH_IMAGE_ARTIFACT }}

  # Test built image
  test:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      # Get the docker-image from the artifacts and load it
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input ${{ env.PATH_IMAGE_ARTIFACT }}
          docker image ls -a
      # Run the container
      - name: Test
        run: docker run --rm ${{ env.DOCKER_IMAGE_TEST }}

  # Push image `latest` for every push on the default-branch and for every tag
  push-docker-image:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      # An explicit checkout is required, due to the `file`- and `context`-option, in the "Build and export to Docker"
      # See: https://github.com/docker/build-push-action/issues/51#issuecomment-724662235
      - uses: actions/checkout@v2
      # Prepare tags, based on the metadata of the git reference
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
      # Get the docker-image from the artifacts and load it (as cache for the builds)
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input ${{ env.PATH_IMAGE_ARTIFACT }}
          docker image ls -a
      # Log in to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Push, based on tags
      - name: Build and push for tags
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.PATH_DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # Push `latest`, based on pushes on the default-branch
      - name: Build and push for "latest"
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.PATH_DOCKERFILE }}
          push: true
          tags: latest
          labels: ${{ steps.meta.outputs.labels }}
