name: Run tests

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare NodeJS environment
        uses: ./.github/actions/setup-js
        with:
          node-version: ${{ matrix.node-version }}

  build:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare NodeJS environment
        uses: ./.github/actions/setup-js
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build
        run: npm run build
      - name: Create build-artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.node-version }}
          path: ./dist/
          retention-days: 1

  test:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare NodeJS environment
        uses: ./.github/actions/setup-js
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build and run tests with coverage
        run: npm run coverage
      - name: Create "coverage report"-artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./coverage/lcov.info
          retention-days: 1

  test-mutations:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    env:
      STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare NodeJS environment
        uses: ./.github/actions/setup-js
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download build-artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.node-version }}
          path: ./dist/
      - name: Run mutation tests
        run: npm run test-mutations

  finish-send-coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download "coverage report"-artifacts
        uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: ./coverage/
      - name: Push coverage to coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          parallel: true
